# file: .github/workflows/release.yml
name: Release

on:
  push:
    branches:
      - 'main'

jobs:
  tag:
    name: "Create and Update Version"
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.create_tag.outputs.new_tag }}
      # Add a new output to signal if a release should be created
      new_version_created: ${{ steps.check_version.outputs.new_version_created }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Use the PAT to allow pushing to the protected main branch.
          token: ${{ secrets.RELEASE_PAT }}

      - name: Calculate next version (Dry Run)
        id: tag_dry_run
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c # Pinned to v1.7.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          DRY_RUN: true

      - name: Check if a new version was created
        id: check_version
        run: |
          if [ "${{ steps.tag_dry_run.outputs.new_tag }}" == "${{ steps.tag_dry_run.outputs.previous_tag }}" ]; then
            echo "No new version created. Skipping release."
            echo "new_version_created=false" >> $GITHUB_OUTPUT
          else
            echo "New version ${{ steps.tag_dry_run.outputs.new_tag }} will be created."
            echo "new_version_created=true" >> $GITHUB_OUTPUT
          fi

      - name: Update version in files
        if: steps.check_version.outputs.new_version_created == 'true'
        run: |
          VERSION=${{ steps.tag_dry_run.outputs.new_tag }}
          echo "Bumping version to $VERSION"
          sed -i "s/VERSION=\".*\"/VERSION=\"$VERSION\"/" action.yml
          sed -i "s/repo-slice@v[0-9]*\.[0-9]*\.[0-9]*/repo-slice@$VERSION/" README.md

      - name: Verify version update
        if: steps.check_version.outputs.new_version_created == 'true'
        run: |
          VERSION=${{ steps.tag_dry_run.outputs.new_tag }}
          echo "Verifying version in action.yml"
          grep "VERSION=\"$VERSION\"" action.yml
          echo "Verifying version in README.md"
          grep "repo-slice@$VERSION" README.md

      - name: Commit version bump
        if: steps.check_version.outputs.new_version_created == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(release): Bump version to ${{ steps.tag_dry_run.outputs.new_tag }} [skip ci]"
          
      - name: Create Tag
        if: steps.check_version.outputs.new_version_created == 'true'
        id: create_tag
        uses: anothrNick/github-tag-action@e528bc2b9628971ce0e6f823f3052d1dcd9d512c
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          CUSTOM_TAG: ${{ steps.tag_dry_run.outputs.new_tag }}
  
  goreleaser:
    name: "Run GoReleaser"
    needs: tag
    if: needs.tag.outputs.new_version_created == 'true'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.tag.outputs.tag }}
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace623f3052d1dcd9d512c
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}